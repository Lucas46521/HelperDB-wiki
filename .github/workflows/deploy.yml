# Workflow para construir um site (ex.: Astro) com deploy automático via Vercel
name: Build for Vercel

# Gatilhos para executar o workflow
on:
  # Executa em pushes para a branch principal
  push:
    branches: [ main, master ]
  # Executa em pull requests para a branch principal
  pull_request:
    branches: [ main, master ]
  # Permite execução manual via Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: build
  cancel-in-progress: false

jobs:
  build:
    name: 🛠️ Build Project
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ steps.detect-package-manager.outputs.lockfile }}

      - name: 📦 Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: 🏗️ Build project
        run: ${{ steps.detect-package-manager.outputs.runner }} astro build
        env:
          NODE_ENV: production 